// SCSS Variables (can be overridden before import)
$cart-item-processing-duration: 250ms !default;
$cart-item-destroying-duration: 600ms !default;
$cart-item-shadow-color: rgba(0, 0, 0, 0.15) !default;
$cart-item-shadow-color-strong: rgba(0, 0, 0, 0.5) !default;
$cart-item-processing-bg: rgba(100, 100, 100, 0.2) !default;
$cart-item-destroying-bg: rgba(0, 0, 0, 0.1) !default;
$cart-item-processing-scale: 0.98 !default;
$cart-item-destroying-scale: 0.85 !default;
$cart-item-processing-blur: 1px !default;
$cart-item-destroying-blur: 10px !default;
$cart-item-destroying-opacity: 0.2 !default;
$cart-item-destroying-brightness: 0.6 !default;
$cart-item-destroying-saturate: 0.3 !default;

// Cart item component styles
cart-item {
  // CSS Custom Properties for customization (mapped from SCSS variables)
  --cart-item-processing-duration: #{$cart-item-processing-duration};
  --cart-item-destroying-duration: #{$cart-item-destroying-duration};
  --cart-item-shadow-color: #{$cart-item-shadow-color};
  --cart-item-shadow-color-strong: #{$cart-item-shadow-color-strong};
  --cart-item-processing-bg: #{$cart-item-processing-bg};
  --cart-item-destroying-bg: #{$cart-item-destroying-bg};
  --cart-item-processing-scale: #{$cart-item-processing-scale};
  --cart-item-destroying-scale: #{$cart-item-destroying-scale};
  --cart-item-processing-blur: #{$cart-item-processing-blur};
  --cart-item-destroying-blur: #{$cart-item-destroying-blur};
  --cart-item-destroying-opacity: #{$cart-item-destroying-opacity};
  --cart-item-destroying-brightness: #{$cart-item-destroying-brightness};
  --cart-item-destroying-saturate: #{$cart-item-destroying-saturate};

  display: block;
  position: relative;
  overflow: hidden;
  padding: 0px;

  box-shadow: inset 0px 0px 0px rgba(0, 0, 0, 0);

  transition:
    filter var(--cart-item-processing-duration) ease-out,
    background-color var(--cart-item-processing-duration) ease-out,
    box-shadow var(--cart-item-processing-duration) ease-out;

  &::after {
    content: '';
    display: block;
    position: absolute;
    background: rgba(0, 0, 0, 0);
    width: 100%;
    pointer-events: none;
    height: 100%;
    top: 0px;
    left: 0px;
    transition: background-color var(--cart-item-processing-duration) ease;
  }

  // Ready state (default)
  &[data-state='ready'] {
    cart-item-content {
      transform: scale(1);
      filter: blur(0px);
      opacity: 1;
    }

    cart-item-processing {
      opacity: 0;
      visibility: hidden;
    }
  }

  // Processing state - content slightly scaled and blurred, processing overlay visible
  &[data-state='processing'] {
    box-shadow: inset 0px 2px 10px var(--cart-item-shadow-color);

    &::after {
      background: rgba(0, 0, 0, 0.15);
    }

    cart-item-content {
      transform: scale(var(--cart-item-processing-scale));
      filter: blur(var(--cart-item-processing-blur));
      opacity: 0.9;
      pointer-events: none;
    }

    cart-item-processing {
      opacity: 1;
      visibility: visible;
    }
  }

  // Destroying state - heavy effects on content, darker background
  &[data-state='destroying'] {
    background-color: var(--cart-item-destroying-bg);
    box-shadow: inset 0px 4px 20px var(--cart-item-shadow-color-strong);
    margin-top: 0px;
    margin-bottom: 0px;
    transition:
      filter var(--cart-item-destroying-duration) ease,
      background-color var(--cart-item-destroying-duration) ease,
      box-shadow var(--cart-item-destroying-duration) ease,
      margin var(--cart-item-destroying-duration) ease;

    &::after {
      background: rgba(0, 0, 0, 0.9);
      transition: background-color var(--cart-item-destroying-duration) ease;
    }

    cart-item-content {
      transition:
        transform var(--cart-item-destroying-duration) ease,
        filter var(--cart-item-destroying-duration) ease,
        opacity var(--cart-item-destroying-duration) ease;

      transform: scale(var(--cart-item-destroying-scale));
      filter: blur(var(--cart-item-destroying-blur)) saturate(var(--cart-item-destroying-saturate));
      opacity: var(--cart-item-destroying-opacity);
      pointer-events: none;
    }

    cart-item-processing {
      opacity: 0;
      transition: opacity var(--cart-item-processing-duration) ease;
    }
  }
}

// Base styles for child components
cart-item-content {
  display: block;
  transition:
    transform var(--cart-item-processing-duration) ease-out,
    filter var(--cart-item-processing-duration) ease-out,
    opacity var(--cart-item-processing-duration) ease-out;
}

cart-item-processing {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  // background: var(--cart-item-processing-bg);
  background: transparent;
  opacity: 0;
  visibility: hidden;
  transition:
    opacity var(--cart-item-processing-duration) ease-out,
    visibility var(--cart-item-processing-duration) ease-out;
  z-index: 10;
}
