!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).CartItem={})}(this,function(t){"use strict";class QuantityModifier extends HTMLElement{static#t=!1;constructor(){super(),this.handleDecrement=this.handleDecrement.bind(this),this.handleIncrement=this.handleIncrement.bind(this),this.handleInputChange=this.handleInputChange.bind(this),QuantityModifier.#e()}static#e(){if(QuantityModifier.#t)return;const t=document.createElement("style");t.textContent='\n      /* Hide number input spin buttons for quantity-modifier */\n      quantity-modifier input::-webkit-outer-spin-button,\n      quantity-modifier input::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }\n      \n      quantity-modifier input[type="number"] {\n        -moz-appearance: textfield;\n      }\n    ',document.head.appendChild(t),QuantityModifier.#t=!0}static get observedAttributes(){return["min","max","value"]}connectedCallback(){this.render(),this.attachEventListeners()}disconnectedCallback(){this.removeEventListeners()}attributeChangedCallback(t,e,n){e!==n&&this.updateInput()}get min(){return parseInt(this.getAttribute("min"))||1}get max(){return parseInt(this.getAttribute("max"))||99}get value(){return parseInt(this.getAttribute("value"))||1}set value(t){this.setAttribute("value",t)}render(){const t=this.min,e=this.max,n=this.value,i=this.querySelector("[data-action-decrement]"),a=this.querySelector("[data-action-increment]"),s=this.querySelector("[data-quantity-modifier-field]");i&&a&&s?(s.value=n,s.min=t,s.max=e,s.type="number"):this.innerHTML=`\n        <button data-action-decrement type="button">\n          <svg class="svg-decrement" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512">\n            <title>decrement</title>\n            <path fill="currentColor" d="M368 224H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h352c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z"></path>\n          </svg>\n        </button>\n        <input \n          type="number" \n          inputmode="numeric" \n          pattern="[0-9]*" \n          data-quantity-modifier-field \n          value="${n}" min="${t}" max="${e}">\n        <button data-action-increment type="button">\n          <svg class="svg-increment" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512">\n            <title>increment</title>\n            <path fill="currentColor" d="M368 224H224V80c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v144H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h144v144c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V288h144c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z"></path>\n          </svg>\n        </button>\n      `}attachEventListeners(){const t=this.querySelector("[data-action-decrement]"),e=this.querySelector("[data-action-increment]"),n=this.querySelector("[data-quantity-modifier-field]");t&&t.addEventListener("click",this.handleDecrement),e&&e.addEventListener("click",this.handleIncrement),n&&n.addEventListener("input",this.handleInputChange)}removeEventListeners(){const t=this.querySelector("[data-action-decrement]"),e=this.querySelector("[data-action-increment]"),n=this.querySelector("[data-quantity-modifier-field]");t&&t.removeEventListener("click",this.handleDecrement),e&&e.removeEventListener("click",this.handleIncrement),n&&n.removeEventListener("input",this.handleInputChange)}handleDecrement(){const t=this.value,e=Math.max(t-1,this.min);this.updateValue(e)}handleIncrement(){const t=this.value,e=Math.min(t+1,this.max);this.updateValue(e)}handleInputChange(t){const e=parseInt(t.target.value);if(!isNaN(e)){const t=Math.max(this.min,Math.min(e,this.max));this.updateValue(t)}}updateValue(t){t!==this.value&&(this.value=t,this.updateInput(),this.dispatchChangeEvent(t))}updateInput(){const t=this.querySelector("[data-quantity-modifier-field]");t&&(t.value=this.value,t.min=this.min,t.max=this.max)}dispatchChangeEvent(t){this.dispatchEvent(new CustomEvent("quantity-modifier:change",{detail:{value:t},bubbles:!0}))}}customElements.define("quantity-modifier",QuantityModifier);class CartItem extends HTMLElement{static#n=new Map;static#i=null;#a="ready";#s=!1;#r=!1;#c={};#h=null;#o=null;static setTemplate(t,e){if("string"!=typeof t)throw new Error("Template name must be a string");if("function"!=typeof e)throw new Error("Template must be a function");CartItem.#n.set(t,e)}static setProcessingTemplate(t){if("function"!=typeof t)throw new Error("Processing template must be a function");CartItem.#i=t}static createAnimated(t,e){return new CartItem(t,e,{animate:!0})}static get observedAttributes(){return["state","key"]}attributeChangedCallback(t,e,n){e!==n&&"state"===t&&(this.#a=n||"ready")}constructor(t=null,e=null,n={}){super(),this.#h=t,this.#o=e;const i=n.animate||this.hasAttribute("animate-in");this.#a=t&&i?"appearing":this.getAttribute("state")||"ready",this.#c={click:this.#m.bind(this),change:this.#l.bind(this),transitionEnd:this.#u.bind(this)}}connectedCallback(){this.#h&&this.#d(),this.content=this.querySelector("cart-item-content"),this.processing=this.querySelector("cart-item-processing"),this.#p(),this.#g(),"appearing"===this.#a&&(this.setAttribute("state","appearing"),this.#r=!0,requestAnimationFrame(()=>{const t=this.scrollHeight;this.style.height=`${t}px`,requestAnimationFrame(()=>{this.setState("ready")})}))}disconnectedCallback(){this.#y()}#g(){this.addEventListener("click",this.#c.click),this.addEventListener("change",this.#c.change),this.addEventListener("quantity-modifier:change",this.#c.change),this.addEventListener("transitionend",this.#c.transitionEnd)}#y(){this.removeEventListener("click",this.#c.click),this.removeEventListener("change",this.#c.change),this.removeEventListener("quantity-modifier:change",this.#c.change),this.removeEventListener("transitionend",this.#c.transitionEnd)}get state(){return this.#a}get cartKey(){return this.getAttribute("key")}#m(t){t.target.closest("[data-action-remove-item]")&&(t.preventDefault(),this.#v())}#l(t){if("quantity-modifier:change"===t.type)return void this.#f(t.detail.value);const e=t.target.closest("[data-cart-quantity]");e&&this.#f(e.value)}#u(t){"height"===t.propertyName&&this.#s?this.remove():"height"===t.propertyName&&this.#r&&(this.style.height="",this.#r=!1)}#v(){this.dispatchEvent(new CustomEvent("cart-item:remove",{bubbles:!0,detail:{cartKey:this.cartKey,element:this}}))}#f(t){this.dispatchEvent(new CustomEvent("cart-item:quantity-change",{bubbles:!0,detail:{cartKey:this.cartKey,quantity:parseInt(t),element:this}}))}#d(){if(!this.#h||0===CartItem.#n.size)return void console.log("no item data or no template",this.#h,CartItem.#n);const t=this.#h.key||this.#h.id;t&&this.setAttribute("key",t);const e=this.#h.properties?._cartTemplate||"default",n=CartItem.#n.get(e)||CartItem.#n.get("default");if(!n)return void console.warn(`Cart item template '${e}' not found and no default template set`);const i=n(this.#h,this.#o),a=CartItem.#i?CartItem.#i():'<div class="cart-item-loader"></div>';this.innerHTML=`\n      <cart-item-content>\n        ${i}\n      </cart-item-content>\n      <cart-item-processing>\n        ${a}\n      </cart-item-processing>\n    `}setData(t,e=null){this.#h=t,e&&(this.#o=e),this.#d(),this.content=this.querySelector("cart-item-content"),this.processing=this.querySelector("cart-item-processing"),this.#p()}#p(){if(!this.#h)return;const t=this.querySelectorAll("[data-content-line-price]"),e=this.#b(this.#h.line_price||0);t.forEach(t=>{t.textContent=e})}#b(t){return"number"!=typeof t?"$0.00":`$${(t/100).toFixed(2)}`}get itemData(){return this.#h}setState(t){["ready","processing","destroying","appearing"].includes(t)&&this.setAttribute("state",t)}destroyYourself(){if(this.#s)return;this.#s=!0;const t=this.offsetHeight;this.setState("destroying"),requestAnimationFrame(()=>{this.style.height=`${t}px`;const e=getComputedStyle(this),n=e.getPropertyValue("--cart-item-destroying-duration")?.trim()||"400ms";this.style.transition=`height ${n} ease`,this.style.height="0px",setTimeout(()=>{this.remove()},600)})}}class CartItemContent extends HTMLElement{constructor(){super()}}class CartItemProcessing extends HTMLElement{constructor(){super()}}customElements.get("cart-item")||customElements.define("cart-item",CartItem),customElements.get("cart-item-content")||customElements.define("cart-item-content",CartItemContent),customElements.get("cart-item-processing")||customElements.define("cart-item-processing",CartItemProcessing),t.CartItem=CartItem,t.CartItemContent=CartItemContent,t.CartItemProcessing=CartItemProcessing,t.QuantityModifier=QuantityModifier});
